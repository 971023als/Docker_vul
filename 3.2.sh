#!/bin/bash

# 변수 초기화
{
  "분류": "이미지",
  "코드": "3.2",
  "위험도": "중요도 중",
  "진단_항목": "이미지 취약점 및 구성 결함",
  "대응방안": {
    "설명": "Docker 이미지는 컨테이너 생성의 기반으로, 보안에 취약한 이미지 사용은 컨테이너 및 호스트 시스템의 보안을 위협할 수 있습니다. 이를 방지하기 위해 신뢰할 수 있는 이미지 사용, 취약한 구성요소의 업데이트, 이미지 내 주요 정보 포함을 피해야 합니다.",
    "설정방법": [
      "신뢰할 수 있는 소스에서 이미지를 가져오고, Docker Content Trust를 활성화",
      "정기적인 이미지 스캔을 통해 취약점을 식별하고 업데이트",
      "컨테이너 내 불필요한 패키지 삭제 및 필수 패키지의 보안 패치 적용",
      "이미지 내 중요 정보(예: 비밀번호, 키 등)를 직접 포함하지 않도록 환경 변수 또는 별도의 관리 시스템을 사용"
    ]
  },
  "현황": [],
  "진단_결과": ""
}


# Docker 이미지 취약점 검사
echo "Docker 이미지 취약점 및 구성 결함을 검사합니다..."

# 이미지 목록 및 검증
docker images | while read image; do
    echo "검사 중: $image"
    docker history "$image" | grep 'FROM|RUN|ADD|COPY'
done

# 컨테이너 패키지 검증
docker ps --quiet | while read container; do
    echo "컨테이너 패키지 검사: $container"
    docker exec "$container" rpm -qa
done

# 결과 JSON 출력
echo "{
  \"분류\": \"$분류\",
  \"코드\": \"$코드\",
  \"위험도\": \"$위험도\",
  \"진단_항목\": \"$진단_항목\",
  \"대응방안\": \"$대응방안\",
  \"현황\": $현황,
  \"진단_결과\": \"$진단_결과\"
}"
